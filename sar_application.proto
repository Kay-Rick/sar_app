syntax = "proto3";//这里proto2和proto3都可以，srpc都支持

message SAR_Open_Request {
    int32 operteMode = 1;     //成像模式
    int32 apertureLength = 2; //孔径长度
    int32 winNumer = 3;       //距离压缩加窗个数
    int32 gateThreshold = 4;   //PGA门限值
    float  longitude = 5;//经度  度 
    float  latitude = 6;//纬度 度
};
message SAR_Close_Request{
};
message SAR_ReconstructTime_Request{
};

message SAR_Open_Response {
};
message SAR_Close_Response{
};
message SAR_ReconstructTime_Response{
    uint32 task1 = 1;//任务类型
    uint32 task2 = 2;//切换任务类型
    uint32 hardwareid = 3;//硬件id,扩展用
    float timelen = 4;//重构时间
    float param1 = 5;//扩展用
    float param2 = 6;//扩展用
};

// 对外提供接口：sh李老师调用
service SAR {
    rpc SAR_Open_Interface(SAR_Open_Request) returns (SAR_Open_Response);
    rpc SAR_Close_Interface(SAR_Close_Request) returns (SAR_Close_Response);
    rpc SAR_Get_Reconstruct_Time(SAR_ReconstructTime_Request) returns (SAR_ReconstructTime_Response);
};


//dsp agent
message DSPControllerRequest{};
message DSPControllerResponse{};

message ReconstructTimeResponse{
    float time = 1;
};

// 作为服务调用方调用dsp_agent
service DSPController{
    rpc LoadSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc StartSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc StopSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc SwitchSarApp(DSPControllerRequest) returns (DSPControllerResponse);
    rpc GetSarReconstructTime(DSPControllerRequest) returns(ReconstructTimeResponse);
};



//降噪接口请求参数
message NoiseReduction_Request{
    float  longitude = 1;//经度  度 
    float  latitude = 2;//纬度 度
}
//降噪接口返回值
message NoiseReduction_Response{
    float  longitude = 1;//经度  度 
    float  latitude = 2;//纬度 度
    bytes image_vector = 3; //图像向量
}
//特征提取接口请求参数
message  Feature_Etraction_Request{
    float  longitude = 1;//经度  度 
    float  latitude = 2;//纬度 度
    bytes image_vector = 3; //图像向量
}
message Feature_Etraction_Response{
    
}
//SAR图形处理服务   
// 作为调用方，具体实现西电张亚聪
service  SAR_iamge_processing_service{
    
    /**
    @functionName  降噪
    **/
    rpc noise_reduction(NoiseReduction_Request) returns(NoiseReduction_Response);

    /**
    @functionName  特征提取
    **/
    rpc feature_etraction(Feature_Etraction_Request) returns(Feature_Etraction_Response);
};


